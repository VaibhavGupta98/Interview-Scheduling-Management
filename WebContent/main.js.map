{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-candidate/add-candidate.component.css","webpack:///./src/app/add-candidate/add-candidate.component.html","webpack:///./src/app/add-candidate/add-candidate.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-candidate/edit-candidate.component.css","webpack:///./src/app/edit-candidate/edit-candidate.component.html","webpack:///./src/app/edit-candidate/edit-candidate.component.ts","webpack:///./src/app/get-candidate/get-candidate.component.css","webpack:///./src/app/get-candidate/get-candidate.component.html","webpack:///./src/app/get-candidate/get-candidate.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/myservices/dataservice.service.ts","webpack:///./src/app/observations/observations.component.css","webpack:///./src/app/observations/observations.component.html","webpack:///./src/app/observations/observations.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<form #addRequirementForm=\\\"ngForm\\\" (ngSubmit)=\\\"onAddRequirement(addRequirementForm)\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"empName\\\">Employer Name:</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"empName\\\"\\n    ngModel\\n    name=\\\"employer\\\"\\n    #employer=\\\"ngModel\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"domain\\\">Domain</label>\\n    <select class=\\\"form-control\\\" id=\\\"domain\\\" \\n    ngModel\\n    name=\\\"domain\\\"\\n    #domain=\\\"ngModel\\\">\\n        <option>Telephonic </option>\\n        <option>Video Conferencing</option>\\n        <option>Face to face</option>\\n      </select>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"requesteddate\\\"> Requested date</label>\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"requesteddate\\\"\\n    ngModel\\n    name=\\\"requesteddate\\\"\\n    #requesteddate=\\\"ngModel\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"closingdate\\\"> Closing date</label>\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"closingdate\\\"\\n      ngModel\\n      name=\\\"closingdate\\\"\\n      #closingdate=\\\"ngModel\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n    <label for=\\\"vacancies\\\">Vacancies</label>\\n    <select class=\\\"form-control\\\" id=\\\"vacancies\\\"\\n      ngModel\\n      name=\\\"vacancies\\\"\\n      #vacancies=\\\"ngModel\\\">\\n        <option>1</option>\\n        <option>2</option>\\n        <option>3</option>\\n        <option>4</option>\\n        <option>5</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"experience\\\">Min Experience</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"experience\\\"\\n        ngModel\\n        name=\\\"experience\\\"\\n        #experience=\\\"ngModel\\\">\\n      </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"mode\\\">Mode of Interviewt</label>\\n      <select class=\\\"form-control\\\" id=\\\"mode\\\"\\n      ngModel\\n      name=\\\"mode\\\"\\n      #mode=\\\"ngModel\\\">\\n        <option>Telephonic </option>\\n        <option>Video Conferencing</option>\\n        <option>Face to face</option>\\n      </select>\\n    </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../myservices/dataservice.service';\n\n@Component({\n  selector: 'app-add-candidate',\n  templateUrl: './add-candidate.component.html',\n  styleUrls: ['./add-candidate.component.css']\n})\nexport class AddCandidateComponent implements OnInit {\n\n  constructor(public ds: DataService) {}\n\n  ngOnInit() {\n  }\n\n  onAddRequirement(addRequirementForm){\n    console.log(addRequirementForm.value);\n    this.ds.onAddRequirement(addRequirementForm).subscribe((response)=>{\n      console.log(response);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<html>\\n  <!--\\n<head>\\n\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\n    <meta name=\\\"description\\\" content=\\\"\\\">\\n    <meta name=\\\"author\\\" content=\\\"\\\">\\n\\n    <title>Full Slider - Start Bootstrap Template</title>\\n\\n    <! Bootstrap core CSS \\n    <link href=\\\"vendor/bootstrap/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\n      -->\\n    <!-- Custom styles for this template \\n    <link href=\\\"css/full-slider.css\\\" rel=\\\"stylesheet\\\">\\n\\n  </head>\\n\\n\\n-->\\n\\n\\n\\n\\n\\n\\n<body>\\n\\n\\n\\n\\n\\n\\n  <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" (click)=\\\"iscollapsed = !iscollapsed\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mainNavBar\\\">\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">WebSiteName</a>\\n      </div>\\n      <div class=\\\"navbar-collapse\\\" [ngClass]=\\\"{'collapse': !iscollapsed }\\\" id=\\\"mainNavBar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a routerLink=\\\"/home\\\" (click)=\\\"iscollapsed= !iscollapsed\\\">Home</a></li>\\n        <li><a href=\\\"#\\\">Page 1</a></li>\\n        <li><a href=\\\"#\\\">Page 2</a></li>\\n        <li><a href=\\\"#\\\">Page 3</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li><a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\" (click)=\\\"iscollapsed= !iscollapsed\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n          <li class=\\\"active\\\"><a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" (click)=\\\"iscollapsed= !iscollapsed\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a></li>\\n          <li><a routerLink=\\\"\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span>Candidate Login</a></li>\\n        </ul>\\n\\n        </div>\\n    </div>\\n  </nav>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n  <div class=\\\"column-md-8\\\">\\n\\n     <router-outlet></router-outlet>\\n\\n        \\n        \\n\\n    </div>\\n    </div>\\n  </div>\\n\\n\\n    <!--\\n      <header>\\n          <div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n            <ol class=\\\"carousel-indicators\\\">\\n              <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n              <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\" class=\\\"\\\"></li>\\n              <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\" class=\\\"\\\"></li>\\n            </ol>\\n            <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\n              <!-- Slide One - Set the background image for this slide in the line below \\n              <div class=\\\"carousel-item active\\\" style=\\\"background-image: url('http://placehold.it/1900x1080')\\\">\\n                <div class=\\\"carousel-caption d-none d-md-block\\\">\\n                  <h3>First Slide</h3>\\n                  <p>This is a description for the first slide.</p>\\n                </div>\\n              </div>\\n              <!-- Slide Two - Set the background image for this slide in the line below \\n              <div class=\\\"carousel-item\\\" style=\\\"background-image: url('http://placehold.it/1900x1080')\\\">\\n                <div class=\\\"carousel-caption d-none d-md-block\\\">\\n                  <h3>Second Slide</h3>\\n                  <p>This is a description for the second slide.</p>\\n                </div>\\n              </div>\\n              <!-- Slide Three - Set the background image for this slide in the line below\\n              <div class=\\\"carousel-item\\\" style=\\\"background-image: url('http://placehold.it/1900x1080')\\\">\\n                <div class=\\\"carousel-caption d-none d-md-block\\\">\\n                  <h3>Third Slide</h3>\\n                  <p>This is a description for the third slide.</p>\\n                </div>\\n              </div>\\n            </div>\\n            <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n              <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n            <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n              <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </div>\\n        </header>\\n\\n        -->\\n\\n\\n        </body>\\n        </html>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(){let iscollapsed=true;}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { RouterModule,Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { EditCandidateComponent } from './edit-candidate/edit-candidate.component';\nimport { AddCandidateComponent } from './add-candidate/add-candidate.component';\nimport { DataService } from './myservices/dataservice.service';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { GetCandidateComponent } from './get-candidate/get-candidate.component';\nimport { ObservationsComponent } from './observations/observations.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    EditCandidateComponent,\n    AddCandidateComponent,\n    GetCandidateComponent,\n    ObservationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, \n    HttpClientModule,\n    RouterModule.forRoot([\n      {path: 'login', component:LoginComponent},\n      {path: 'signup', component:SignupComponent},\n      {path: 'home', component:HomeComponent },\n      {path: 'addcandidate',component:AddCandidateComponent},\n      {path: 'editcandidate', component:EditCandidateComponent},\n      {path:'getAllCandidates' , component: GetCandidateComponent},\n      {path:'observations', component: ObservationsComponent}\n  ])\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<form #addRequirementForm=\\\"ngForm\\\" (ngSubmit)=\\\"onAddRequirement(addRequirementForm)\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"empName\\\">Employer Name:</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"empName\\\"\\n    ngModel\\n    name=\\\"employer\\\"\\n    #employer=\\\"ngModel\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"domain\\\">Domain</label>\\n    <select class=\\\"form-control\\\" id=\\\"domain\\\" \\n    ngModel\\n    name=\\\"domain\\\"\\n    #domain=\\\"ngModel\\\">\\n        <option>Telephonic </option>\\n        <option>Video Conferencing</option>\\n        <option>Face to face</option>\\n      </select>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"requesteddate\\\"> Requested date</label>\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"requesteddate\\\"\\n    ngModel\\n    name=\\\"requesteddate\\\"\\n    #requesteddate=\\\"ngModel\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"closingdate\\\"> Closing date</label>\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"closingdate\\\"\\n      ngModel\\n      name=\\\"closingdate\\\"\\n      #closingdate=\\\"ngModel\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n    <label for=\\\"vacancies\\\">Vacancies</label>\\n    <select class=\\\"form-control\\\" id=\\\"vacancies\\\"\\n      ngModel\\n      name=\\\"vacancies\\\"\\n      #vacancies=\\\"ngModel\\\">\\n        <option>1</option>\\n        <option>2</option>\\n        <option>3</option>\\n        <option>4</option>\\n        <option>5</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"experience\\\">Min Experience</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"experience\\\"\\n        ngModel\\n        name=\\\"experience\\\"\\n        #experience=\\\"ngModel\\\">\\n      </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"mode\\\">Mode of Interviewt</label>\\n      <select class=\\\"form-control\\\" id=\\\"mode\\\"\\n      ngModel\\n      name=\\\"mode\\\"\\n      #mode=\\\"ngModel\\\">\\n        <option>Telephonic </option>\\n        <option>Video Conferencing</option>\\n        <option>Face to face</option>\\n      </select>\\n    </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-candidate',\n  templateUrl: './edit-candidate.component.html',\n  styleUrls: ['./edit-candidate.component.css']\n})\nexport class EditCandidateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n  <tr>\\n    <th>RequirementID</th>\\n  </tr>\\n   <tr  *ngFor=\\\"let rid of requirementid\\\">\\n    <td>{{ rid }}</td>\\n  </tr>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../myservices/dataservice.service';\n\n@Component({\n  selector: 'app-get-candidate',\n  templateUrl: './get-candidate.component.html',\n  styleUrls: ['./get-candidate.component.css']\n})\nexport class GetCandidateComponent implements OnInit {\n\n  requirementid : any = []\n\n  constructor(public ds: DataService) { \n\n    this.ds.getAllReqid()\n    .subscribe(\n      (response) => {\n        // console.log(response);\n        this.requirementid = response;\n      }\n    );\n  }\n\n  \n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<header class=\\\"jumbotron my-4\\\">\\r\\n    <h1 class=\\\"display-3\\\">Welcome to Home!</h1>\\r\\n    <p class=\\\"lead\\\"></p>\\r\\n    <a href=\\\"#\\\" class=\\\"btn btn-primary btn-lg\\\">Call to action!</a>\\r\\n  </header>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row text-center\\\">\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top\\\" src=\\\"\\\" alt=\\\"\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h4 class=\\\"card-title\\\">Card title</h4>\\r\\n          <p class=\\\"card-text\\\">Add Candidate Requirement Here</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onAddCandidate()\\\">Add Candidate Requirement</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top\\\" src=\\\"\\\" alt=\\\"\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h4 class=\\\"card-title\\\">Card title</h4>\\r\\n          <p class=\\\"card-text\\\">Edit Candidate Requirement Here</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onEditCandidate()\\\">Edit Candidate Requirement</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top\\\" src=\\\"\\\" alt=\\\"\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h4 class=\\\"card-title\\\">Card title</h4>\\r\\n          <p class=\\\"card-text\\\">Schedule Candidate Here</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onScheduleCandidate()\\\">Schedule Candidates</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-3 col-md-6 mb-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top\\\" src=\\\"\\\" alt=\\\"\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h4 class=\\\"card-title\\\">Card title</h4>\\r\\n          <p class=\\\"card-text\\\">View Observations Here</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onObservations()\\\">Observations</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public route: Router) { }\n\n  ngOnInit() {\n  }\n\n  onObservations(){\n      this.route.navigate(['observations']);\n  }\n\n  onAddCandidate(){\n    this.route.navigate(['addcandidate']);\n  }\n\n  onEditCandidate(){\n    this.route.navigate(['editcandidate']);\n  }\n\n  onScheduleCandidate(){\n    this.route.navigate(['getAllCandidates']);  }\n\n}\n","module.exports = \"\"","module.exports = \"<form  #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(loginForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" \\n      id=\\\"username\\\"\\n      aria-describedby=\\\"emailHelp\\\" \\n      placeholder=\\\"Enter email\\\"\\n      ngModel\\n      name=\\\"username\\\"\\n      #username=\\\"ngModel\\\"\\n      >\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\"\\n      ngModel\\n      name=\\\"pwd\\\"\\n      #pwd=\\\"ngModel\\\">\\n    </div>\\n    <div class=\\\"form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\"\\n      ngModel\\n      name=\\\"check\\\"\\n      #check=\\\"ngModel\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">Check me out</label>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport {  Router } from '../../../node_modules/@angular/router';\nimport { DataService } from '../myservices/dataservice.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public route: Router,public ds: DataService) { }\n\n  ngOnInit() {\n  }\n  res=false;\n  onLogin(loginForm){\n      // chck login credentials are valid in database\n      console.log(loginForm.value);\n      this.ds.checkUser(loginForm).subscribe((response)=>{\n        this.res=true;\n      });\n      \n        //navigate to home\n        if(this.res==true){\n        this.route.navigate(['home']);\n        }\n        this.route.navigate(['home']);\n\n\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    empUrl = 'loginController';\r\n\r\n    signupUrl='signupController';\r\n      \r\n    addUrl='requirementController';\r\n\r\n    getReqidUrl='requirementController';\r\n\r\n    getRecordsUrl='http://localhost:8282/Project1/recordController';\r\n\r\n    constructor(public http: HttpClient) {\r\n    }\r\n\r\n    public checkUser(loginForm) {\r\n        console.log(loginForm.value);\r\n        \r\n      return  this.http.post(this.empUrl,JSON.stringify(loginForm.value));\r\n    }\r\n\r\n    public onSignup(signupForm){\r\n        return this.http.post(this.signupUrl,JSON.stringify(signupForm.value));\r\n    }\r\n\r\n\r\n    public onAddRequirement(addRequirementForm){\r\n        return this.http.post(this.addUrl,JSON.stringify(addRequirementForm.value));\r\n    }\r\n\r\n    public getAllReqid(){\r\n        return this.http.get(this.getReqidUrl);\r\n    }\r\n\r\n    public getAllRecords(){\r\n        return this.http.get(this.getRecordsUrl);\r\n    }\r\n    \r\n     public loggingService(msg) {\r\n        console.log(msg);\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n  <tr>\\n    <th>RequirementID</th>\\n    <th>Name</th>\\n    <th>Interview ID</th>\\n    <th>Marks</th>\\n    <th>Result</th>\\n  </tr>\\n   <tr  *ngFor=\\\"let record of Records\\\">\\n    <td>{{ record.rid }}</td>\\n    <td>{{ record.name }}</td>\\n    <td>{{ record.inid }}</td>\\n    <td>{{ record.marks }}</td>\\n    <td>{{ record.res }}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../myservices/dataservice.service';\n\n@Component({\n  selector: 'app-observations',\n  templateUrl: './observations.component.html',\n  styleUrls: ['./observations.component.css']\n})\nexport class ObservationsComponent implements OnInit {\n\n  public Records: any = [];\n\n  constructor(public ds: DataService) { \n    this.ds.getAllRecords()\n        .subscribe(\n          (response) => {\n            // console.log(response);\n            this.Records = response;\n          }\n        );\n\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSignup(signupForm)\\\">\\n    <div class=\\\"form-group \\\">\\n        <label for=\\\"Name\\\">Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Name\\\" placeholder=\\\"name\\\" ngModel\\n        name=\\\"name\\\"\\n        #name=\\\"ngModel\\\">\\n      </div>\\n\\n\\n    <div class=\\\"form-group \\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\"\\n      ngModel\\n      name=\\\"username\\\"\\n      #username=\\\"ngModel\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\"\\n      ngModel\\n      name=\\\"pass\\\"\\n      #pass=\\\"ngModel\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"confirmPassword\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\"\\n        ngModel\\n        name=\\\"confirm\\\"\\n        #confirm=\\\"ngModel\\\"\\n        >\\n      </div>\\n  \\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign up</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../myservices/dataservice.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(public ds: DataService) { }\n\n  ngOnInit() {\n  }\n\n  onSignup(signupForm){\n    console.log(signupForm.value);\n    this.ds.onSignup(signupForm).subscribe((response)=>{\n      console.log(response);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}